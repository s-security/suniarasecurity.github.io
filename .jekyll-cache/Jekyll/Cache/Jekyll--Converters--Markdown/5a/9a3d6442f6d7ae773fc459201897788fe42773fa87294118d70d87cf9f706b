I"K
<p>Below are some useful PowerShell commands that are almost all applicable to a system administrator.</p>

<!--more-->

<p><strong>Back up all production Group Policy Objects</strong></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Backup-GPO –All –Path C:\Temp\AllGPO
</code></pre></div></div>

<p><strong>Check a KB is installed on a Windows machine</strong></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-HotFix –ID update KB2670838
</code></pre></div></div>
<p>You can also query hotfix information on a remote computer using the below command:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-HotFix –ID KB2670838 –Computername TestVM.suniarasecurity.com
</code></pre></div></div>

<p><strong>See who rebooted a server</strong>
This command is excellent when dealing with unexpected reboots.
It will check the system event log for the Event ID 1074 and print the machine name, username, and time that event got generated.
You can add the “Export-CSV” cmdlet to save the output to a CSV file.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-EventLog –Log System –Newest 100 | Where-Object {$_.EventID –eq ‘1074’} | FT MachineName, UserName, TimeGenerated -AutoSize
</code></pre></div></div>

<p><strong>Gathering disabled computer accounts from AD</strong>
This command will export all Active directory computer accounts that are <strong>disabled</strong> and print the output. Again, you can add the “Export-CSV” cmdlet to save the output to a file.</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-ADComputer -Filter {(enabled -eq $false)} -ResultPageSize 2000 -resultSetSize $null -Properties Name,OperatingSystem,SamAccountName,DistinguishedName
</code></pre></div></div>

<p><strong>List All Services</strong></p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-Service [optional wildcard search on service name (not display name)] | `
sort [Status, Name or Displayname]
</code></pre></div></div>
<p>This will list all running services. This can sometimes come in handy for a sysadmin but is more useful during pentesting enumeration stages. The below command will list all running services.</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Get-Service [[optional wildcard search on service name (not display name)] | `
where Status -eq running | sort [Status, Name or Displayname]
</code></pre></div></div>
:ET